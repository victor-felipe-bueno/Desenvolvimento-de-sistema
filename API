from fastapi import FastAPI, HTTPException
from pydantic import BaseModel

app = FastAPI(title="API de Alunos")

class Aluno(BaseModel):
    id: int
    nome: str
    turma: str
    idade: int

banco_alunos = []

@app.get("/")
def raiz():
    return {"mensagem": "Bem-vindo à API!"}

@app.post("/alunos/", response_model=Aluno)
def criar_aluno(aluno: Aluno):
    for a in banco_alunos:
        if a.id == aluno.id:
            raise HTTPException(status_code=400, detail="Matrícula já cadastrada")
    banco_alunos.append(aluno)
    return aluno

@app.get("/alunos/")
def listar_alunos():
    return banco_alunos

@app.get("/alunos/{id}", response_model=Aluno)
def obter_aluno(id: int):
    for aluno in banco_alunos:
        if aluno.id == id:
            return aluno
    raise HTTPException(status_code=404, detail="Aluno não encontrado")

@app.put("/alunos/{id}", response_model=Aluno)
def atualizar_aluno(id: int, aluno_atualizado: Aluno):
    for i, aluno in enumerate(banco_alunos):
        if aluno.id == id:
            banco_alunos[i] = aluno_atualizado
            return aluno_atualizado
    raise HTTPException(status_code=404, detail="Aluno não encontrado")

@app.delete("/alunos/{id}")
def deletar_aluno(id: int):
    for i, aluno in enumerate(banco_alunos):
        if aluno.id == id:
            del banco_alunos[i]
            return {"mensagem": "Aluno deletado com sucesso"}
    raise HTTPException(status_code=404, detail="Aluno não encontrado")
